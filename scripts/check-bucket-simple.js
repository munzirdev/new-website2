import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
dotenv.config();

// Use the same configuration as the app
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://fctvityawavmuethxxix.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseAnonKey) {
  console.error('โ VITE_SUPABASE_ANON_KEY is required');
  process.exit(1);
}

console.log('๐ง ูุญุต ุงูุจูุช ุจุงุณุชุฎุฏุงู ููุณ ุฅุนุฏุงุฏุงุช ุงูุชุทุจูู...');
console.log('URL:', supabaseUrl);
console.log('Anon Key ููุฌูุฏ:', !!supabaseAnonKey);

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkBucket() {
  try {
    console.log('๐ ูุญุต ุงูุจูุชุงุช...');
    
    // Check buckets
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    
    if (bucketsError) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุงูุจูุชุงุช:', bucketsError);
      return false;
    }
    
    console.log('โ ุงูุจูุชุงุช ุงูููุฌูุฏุฉ:', buckets?.map(b => b.name) || []);
    
    // Check if passport-images exists
    const passportBucket = buckets?.find(b => b.name === 'passport-images');
    if (!passportBucket) {
      console.error('โ ุจูุช passport-images ุบูุฑ ููุฌูุฏ!');
      return false;
    }
    
    console.log('โ ุจูุช passport-images ููุฌูุฏ');
    console.log('   - Public:', passportBucket.public);
    console.log('   - File size limit:', passportBucket.file_size_limit);
    
    // Try to list files in the bucket
    console.log('๐ ูุญุต ุงููููุงุช ูู ุงูุจูุช...');
    const { data: files, error: filesError } = await supabase.storage
      .from('passport-images')
      .list();
    
    if (filesError) {
      console.error('โ ุฎุทุฃ ูู ูุญุต ุงููููุงุช:', filesError);
    } else {
      console.log('โ ุงููููุงุช ุงูููุฌูุฏุฉ:', files?.map(f => f.name) || []);
    }
    
    return true;
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ุบูุฑ ูุชููุน:', error);
    return false;
  }
}

// Run the check
checkBucket()
  .then((success) => {
    if (success) {
      console.log('\nโ ุงูุจูุช ูุนูู ุจุดูู ุตุญูุญ!');
    } else {
      console.log('\nโ ููุงู ูุดููุฉ ูู ุงูุจูุช');
      process.exit(1);
    }
  })
  .catch((error) => {
    console.error('โ ูุดู ูู ูุญุต ุงูุจูุช:', error);
    process.exit(1);
  });
